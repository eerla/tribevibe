"""Add banner_url to events

Revision ID: c1e20e7b4b81
Revises: add_event_date_time
Create Date: 2025-08-31 17:55:47.574711

"""
from typing import Sequence, Union


from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = 'c1e20e7b4b81'
down_revision: Union[str, Sequence[str], None] = 'add_event_date_time'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('events', sa.Column('banner_url', sa.String(), nullable=True))
        # Create rsvp_status enum type if not exists
    rsvp_status = postgresql.ENUM('yes', 'no', 'maybe', name='rsvp_status')
    rsvp_status.create(op.get_bind(), checkfirst=True)

    op.execute("ALTER TABLE rsvps ALTER COLUMN status TYPE rsvp_status USING status::rsvp_status")
    op.create_foreign_key(None, 'rsvps', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'rsvps', 'events', ['event_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'rsvps', type_='foreignkey')
    op.drop_constraint(None, 'rsvps', type_='foreignkey')
    op.alter_column('rsvps', 'status',
                   existing_type=sa.Enum('yes', 'no', 'maybe', name='rsvp_status'),
                   type_=sa.VARCHAR(),
                   nullable=False)
    op.drop_column('events', 'banner_url')

        # Drop rsvp_status enum type
    rsvp_status = postgresql.ENUM('yes', 'no', 'maybe', name='rsvp_status')
    rsvp_status.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
